#!/bin/bash

function print_help {
    echo 'stop sps and plot results'
    echo
    echo '-h print help message'
    echo '-p <prefix> find time series directory in <prefix>'
    echo '-o <output> write figure to <output>'
    echo '            default write to SPS directory'
}


output=""
prefix=""
if [ -n $SPS_PREFIX ]; then
    prefix=${SPS_PREFIX}/
fi
while getopts "hp:o:" opt; do
    case "$opt" in
	h)
	    print_help
	    exit 0
	    ;;
	p)
	    prefix=${OPTARG}/
	    ;;
	o)
	    output=$OPTARG
	    ;;
    esac
done

BASEDIR=$(dirname $0)

# Terminate our process
$BASEDIR/ckill sps || exit 1

# For regular jobs, the Job ID is sufficient. However, for array jobs,
# we need to reconstruct the special array job ID and set the Job ID
# to that. If we're not in a job, use a default.
JID=${SLURM_JOB_ID}
AID=${SLURM_ARRAY_JOB_ID}
TID=${SLURM_ARRAY_TASK_ID}
if [ ! -z $AID ] && [ ! -z $TID ]; then
  JID=${AID}_${TID}
fi

# Now, need our SPS output directory and root filenames
if [ ! -z $JID ]; then
  SPSNAME=sps-${JID}
else
  SPSNAME=sps-local
fi
SPSDIR=${prefix}${SPSNAME}
SPSROOT=${SPSDIR}/${SPSNAME}

if [ -z $output ]; then
    output=${SPSROOT}.png
fi

restore_backup () {
  OUT=$1
  BAK="${OUT}.bak"
  # If we got killed in the middle of a rewrite, there may be a backup file
  if [ -f "$BAK" ]; then
    # There might also be a normal file. If so, it's corrupt.
    if [ -f "$OUT" ]; then
      rm -f "$OUT" 
    fi
    # Either way there isn't now, so restore the backup.
    mv "$BAK" "$OUT" 
  fi
}

if [ -d ${SPSDIR} ]; then
    for f in ${SPSROOT}-*.tsv; do
	restore_backup $f &
    done

    wait # For background tasks

  $BASEDIR/sps-pyplot ${SPSDIR} -o ${output}
fi
